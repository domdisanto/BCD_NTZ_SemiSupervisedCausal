all.equal(Yi, joint_3yr_80$Y_change)
all.equal(Ti, joint_3yr_80$A)
?missing
?`&&`
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
data <- NULL
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
Ti <- NULL
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
Ti <- 3
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
Yi <- NULL
data
data <- 1
Ti <- Xi <- NULL
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
data
Yi
Xi
Ti
data
(is.null(data) && is.null(Yi) || is.null(Xi) || is.null(Ti))
data
(is.null(data) && (is.null(Yi) || is.null(Xi) || is.null(Ti)) )
(is.null(data) & (is.null(Yi) | is.null(Xi) | is.null(Ti)))
data
if(is.null(data) & (is.null(Yi) | is.null(Xi) | is.null(Ti))){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
data
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}
Xi
Yi
Ti
data <- NULL
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}
Xi <- 2
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}
Yi <- 4
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}
Yi
Ti
Xi
Ti <- 1
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}
data <- joint_3yr_80$X
data <- joint_3yr_80$X
data$DMT <- joint_3yr_80$A
data$PDDS_Change <- joint_3yr_80$Y_change
Yi <- data$PDDS_Change
Ti <- data$DMT
Ti
Yi
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
Xi
dim(Xi)
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change
Ti <- data$DMT
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Yi
data <- NULL
Xi
Yi
Ti
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Ti
Ti+1
data
data <- 1
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Ti
Xi <- NULL
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
data
data <-
1
data <- joint_3yr_80$X
data$DMT <- joint_3yr_80$A
data$PDDS_Change <- joint_3yr_80$Y_change
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
colnames(Xi)
colnames(data)
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( !all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Ti
Yi
tmp <- data
data <- NULL
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( !all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Yi
Ti
Ai
Xi
Yi <- NULL
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( !all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
data <- tmp
if(is.null(data)){
if(is.null(Yi) | is.null(Xi) | is.null(Ti)){
stop("Either data or (all of) Yi, Xi, and Ti arguments must be non-null")
}
}else if (!is.null(Yi) & !is.null(Xi) & !is.null(Ti)){
message("Both data and matrix (Xi, Yi, Ti) arguments supplied, defaulting to matrix arguments")
}else if( !all(c("PDDS_Change", "DMT") %in% colnames(data) ) ){
stop("DMT and PDDS_Change columnnames must be included in dataframe to create Ti, Yi vectors respectively")
}else{
Yi <- data$PDDS_Change+1
Ti <- data$DMT+1
Xi <- data %>% select(-c(PDDS_Change, DMT)) %>% as.matrix()
}
Yi
Ti
source(here("Code", "analysis_scripts", "00_causal_core.R"))
set.seed(6709161)
X <- joint_3yr_80[["X"]]
A <- joint_3yr_80[["A"]]
Y_avg <- joint_3yr_80[["Y_avg"]]
Y_change <- joint_3yr_80[["Y_change"]]
model_3yr_80 = AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stablize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
set.seed(6709161)
X <- joint_3yr_80[["X"]]
A <- joint_3yr_80[["A"]]
Y_avg <- joint_3yr_80[["Y_avg"]]
Y_change <- joint_3yr_80[["Y_change"]]
model_3yr_80 = AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
tmp <- model_3yr_80
set.seed(6709161)
X <- joint_3yr_80[["X"]]
A <- joint_3yr_80[["A"]]
Y_avg <- joint_3yr_80[["Y_avg"]]
Y_change <- joint_3yr_80[["Y_change"]]
data <- joint_3yr_80$X
data$DMT <- joint_3yr_80$A
data$PDDS_Change <- joint_3yr_80$Y_change
model_3yr_80 = AIPW(data = data#Yi = as.matrix(Y_change)
#, Ti = as.matrix(A)
#, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
source(here("Code", "analysis_scripts", "00_causal_core.R"))
### 3yr (80% Rule) ####
set.seed(6709161)
X <- joint_3yr_80[["X"]]
A <- joint_3yr_80[["A"]]
Y_avg <- joint_3yr_80[["Y_avg"]]
Y_change <- joint_3yr_80[["Y_change"]]
data <- joint_3yr_80$X
data$DMT <- joint_3yr_80$A
data$PDDS_Change <- joint_3yr_80$Y_change
model_3yr_80 = AIPW(data = data#Yi = as.matrix(Y_change)
#, Ti = as.matrix(A)
#, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
model_3yr_80$AIPW.est
tmp$AIPW.est
all.equal(tmp, model_3yr_80)
ate <- function(data, indx){
model = AIPW(data = data
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
return(model$AIPW.est)
}
boot_df <- joint_3yr_80$X
boot_df$DMT <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$Y
boot(data = boot_df, statistic = ate, R = 1)
?boot
p_load(boot)
?boot
boot <- boot::boot
?boot
class(boot_df)
boot_df <- as.data.frame(joint_3yr_80$X)
boot_df$DMT <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$Y
class(boot_df)
boot_df <- as.data.frame(joint_3yr_80$X)
boot_df$DMT <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$Y
boot(data = boot_df, statistic = ate, R = 1)
data <- boot_df
"PDDS_Change" %in% colnames(boot_df)
boot_df$PDDS_Change <- joint_3yr_80$Y
"PDDS_Change" %in% colnames(boot_df)
boot_df %>% colnames
boot_df <- as.data.frame(joint_3yr_80$X)
boot_df$DMT <- joint_3yr_80$A
boot_df <- as.data.frame(joint_3yr_80$X)
"DMT" %in% colnames(boot_df)
boot_df$DMT <- joint_3yr_80$A
"DMT" %in% colnames(boot_df)
"PDDS_Change" %in% colnames(boot_df)
boot_df$PDDS_Change <- joint_3yr_80$Y
"PDDS_Change" %in% colnames(boot_df)
joint_3yr_80$Y
joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$A
"PDDS_Change" %in% colnames(boot_df)
boot_df <- as.data.frame(joint_3yr_80$X)
boot_df$DMT <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$Y_change
boot_df
boot_df$PDDS_Change
boot_df$DMT
boot(data = boot_df, statistic = ate, R = 1)
boot(data = boot_df, statistic = ate, R = 10)
boot(data = boot_df, statistic = ate, R = 100)
start <- Sys.time()
boot_R100 <- boot(data = boot_df, statistic = ate, R = 100)
end <- Sys.time()
end-start
end_loop - start_loop
boot_R100
- start
end - start
(boot_R100$t, c(0.025, 0.975))
quantile(boot_R100$t, c(0.025, 0.975))
start_loop <- Sys.time()
tmp <- c()
for (iter in 1:100){
ind <- sample(1:nrow(X), replace = T)
X <- joint_3yr_80[["X"]][ind,]
A <- joint_3yr_80[["A"]][ind]
if( (sum(A) / length(A)) >=0.9) warning("Sub-10% treatment group iteration")
Y_change <- joint_3yr_80[["Y_change"]][ind]
if( (sum(Y_change) / length(Y_change)) >= 0.9 | (sum(Y_change) / length(Y_change)) <= 0.1 ) warning("Sub-10% outcome observed")
model_3yr_80 = AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
tmp <- c(tmp, model_3yr_80$AIPW.est)
}
end_loop <- Sys.time()
end_loop - start_loop
boot_df <- as.data.frame(joint_3yr_80$X)
boot_df$DMT <- joint_3yr_80$A
boot_df$PDDS_Change <- joint_3yr_80$Y_change
start <- Sys.time()
boot_R300 <- boot(data = boot_df, statistic = ate, R = 300)
end <- Sys.time()
end - start
summary(boot_R100$t)
summary(boot_R300$t)
quantile(boot_R300$t, c(0.025, 0.975))
quantile(boot_R100$t, c(0.025, 0.975))
boot_tmp <- boot(data = boot_df, statistic = ate, R = 10)
set.seed(1245)
boot_tmp <- boot(data = boot_df, statistic = ate, R = 10)
boot_tmp
boot_tmp
set.seed(1245)
boot_tmp2 <- boot(data = boot_df, statistic = ate, R = 10)
boot_tmp2
all.equal(boot_tmp, boot_tmp2)
boot_R300
boot_R300
sd(boot_R300$t)
boot_R300$t0
mean(boot_R300$t)
mean(boot_R300$t) - boot_r300$t0
mean(boot_R300$t) - boot_R300$t0
model_3yr_80 = AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
model_3yr_80
set.seed(6709161)
X <- joint_3yr_80[["X"]]
A <- joint_3yr_80[["A"]]
Y_avg <- joint_3yr_80[["Y_avg"]]
Y_change <- joint_3yr_80[["Y_change"]]
model_3yr_80 = AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)
model_3yr_80
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
AIPW(Yi = as.matrix(Y_change)
, Ti = as.matrix(A)
, Xi = as.matrix(X)
, stabilize.OR = F
, family = "binomial"
, reg = TRUE
, stabilize = F
, min.ipw = 0.1
, max.ipw = 10
, ITE = F)$AIPW.est
boot_AIPW
source(here("Code", "analysis_scripts", "00_causal_core.R"))
boot_AIPW
source(here("Code", "analysis_scripts", "00_causal_core.R"))
boot_AIPW
boot_KG_ONCE_3yr_80_R300 <- boot_R300
quantile(boot_KG_ONCE_3yr_80_R300$t, c(0.025, 0.975))
summary(boot_KG_ONCE_3yr_80_R300$t)
boot_KG_ONCE_3yr_80_R300$t0
quantile(boot_KG_ONCE_3yr_80_R300$t, c(0.025, 0.975))
